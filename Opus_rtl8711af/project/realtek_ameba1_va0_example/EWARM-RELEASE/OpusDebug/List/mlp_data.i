#line 1 "C:\\Users\\PCCUBE\\Desktop\\Opus_17_jul_2018\\Opus_rtl8711af\\external\\opus\\src\\mlp_data.c"
/*This file is automatically generated from a Keras model*/





#line 1 "C:\\Users\\PCCUBE\\Desktop\\Opus_17_jul_2018\\Opus_rtl8711af\\external\\opus\\src\\mlp.h"
/* Copyright (c) 2017 Jean-Marc Valin */
/*
   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

   - Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR
   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/




#line 1 "C:\\Users\\PCCUBE\\Desktop\\Opus_17_jul_2018\\Opus_rtl8711af\\project\\realtek_ameba1_va0_example\\EWARM-RELEASE\\..\\..\\..\\external\\opus\\include\\opus_types.h"
/* (C) COPYRIGHT 1994-2002 Xiph.Org Foundation */
/* Modified by Jean-Marc Valin */
/*
   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

   - Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
   OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
/* opus_types.h based on ogg_types.h from libogg */

/**
   @file opus_types.h
   @brief Opus reference implementation types
*/











/* Use the real stdint.h if it's there (taken from Paul Hsieh's pstdint.h) */
#line 1 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\stdint.h"
/* stdint.h standard header */
/* Copyright 2003-2010 IAR Systems AB.  */




  #pragma system_include


#line 1 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\ycheck.h"
/* ycheck.h internal checking header file. */
/* Copyright 2005-2010 IAR Systems AB. */

/* Note that there is no include guard for this header. This is intentional. */


  #pragma system_include


/* __INTRINSIC
 *
 * Note: Redefined each time ycheck.h is included, i.e. for each
 * system header, to ensure that intrinsic support could be turned off
 * individually for each file.
 */










/* __AEABI_PORTABILITY_INTERNAL_LEVEL
 *
 * Note: Redefined each time ycheck.h is included, i.e. for each
 * system header, to ensure that ABI support could be turned off/on
 * individually for each file.
 *
 * Possible values for this preprocessor symbol:
 *
 * 0 - ABI portability mode is disabled.
 *
 * 1 - ABI portability mode (version 1) is enabled.
 *
 * All other values are reserved for future use.
 */






#line 67 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\ycheck.h"




/* A definiton for a function of what effects it has.
   NS  = no_state, errno, i.e. it uses no internal or external state. It may
         write to errno though
   NE  = no_state, i.e. it uses no internal or external state, not even
         writing to errno. 
   NRx = no_read(x), i.e. it doesn't read through pointer parameter x.
   NWx = no_write(x), i.e. it doesn't write through pointer parameter x.
   Rx  = returns x, i.e. the function will return parameter x.
   
   All the functions with effects also has "always_returns", 
   i.e. the function will always return.
*/

#line 103 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\ycheck.h"









#line 11 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\stdint.h"
#line 1 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"
/* yvals.h internal configuration header file. */
/* Copyright 2001-2010 IAR Systems AB. */





  #pragma system_include


#line 1 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\ycheck.h"
/* ycheck.h internal checking header file. */
/* Copyright 2005-2010 IAR Systems AB. */

/* Note that there is no include guard for this header. This is intentional. */


  #pragma system_include


/* __INTRINSIC
 *
 * Note: Redefined each time ycheck.h is included, i.e. for each
 * system header, to ensure that intrinsic support could be turned off
 * individually for each file.
 */










/* __AEABI_PORTABILITY_INTERNAL_LEVEL
 *
 * Note: Redefined each time ycheck.h is included, i.e. for each
 * system header, to ensure that ABI support could be turned off/on
 * individually for each file.
 *
 * Possible values for this preprocessor symbol:
 *
 * 0 - ABI portability mode is disabled.
 *
 * 1 - ABI portability mode (version 1) is enabled.
 *
 * All other values are reserved for future use.
 */






#line 67 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\ycheck.h"

#line 12 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"

                /* Convenience macros */









/* Used to refer to '__aeabi' symbols in the library. */ 


                /* Versions */










/*
 * Support for some C99 or other symbols
 *
 * This setting makes available some macros, functions, etc that are
 * beneficial.
 *
 * Default is to include them.
 *
 * Disabling this in C++ mode will not compile (some C++ functions uses C99
 * functionality).
 */


  /* Default turned on when compiling C++, EC++, or C99. */
#line 59 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"





#line 70 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"

                /* Configuration */
#line 1 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Defaults.h"
/***************************************************
 *
 * DLib_Defaults.h is the library configuration manager.
 *
 * Copyright 2003-2010 IAR Systems AB.  
 *
 * This configuration header file performs the following tasks:
 *
 * 1. Includes the configuration header file, defined by _DLIB_CONFIG_FILE,
 *    that sets up a particular runtime environment.
 *
 * 2. Includes the product configuration header file, DLib_Product.h, that
 *    specifies default values for the product and makes sure that the
 *    configuration is valid.
 *
 * 3. Sets up default values for all remaining configuration symbols.
 *
 * This configuration header file, the one defined by _DLIB_CONFIG_FILE, and
 * DLib_Product.h configures how the runtime environment should behave. This
 * includes all system headers and the library itself, i.e. all system headers
 * includes this configuration header file, and the library has been built
 * using this configuration header file.
 *
 ***************************************************
 *
 * DO NOT MODIFY THIS FILE!
 *
 ***************************************************/





  #pragma system_include


/* Include the main configuration header file. */
#line 1 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\INC\\c\\DLib_Config_Full.h"
/* Customer-specific DLib configuration. */
/* Copyright (C) 2003 IAR Systems.  All rights reserved. */





  #pragma system_include


/* Turn on locale support. */


/* Turn on FILE descriptor support. */


/* Turn on multibyte formatting. */


/* Turn on support for hex-floats in strtod. */


#line 40 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Defaults.h"
  /* _DLIB_CONFIG_FILE_STRING is the quoted variant of above */
#line 47 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Defaults.h"

/* Include the product specific header file. */
#line 1 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Product.h"




   #pragma system_include



/*********************************************************************
*
*       Configuration
*
*********************************************************************/

/* Wide character and multi byte character support in library.
 * This is not allowed to vary over configurations, since math-library
 * is built with wide character support.
 */


/* ARM uses the large implementation of DLib */


/* This ensures that the standard header file "string.h" includes
 * the Arm-specific file "DLib_Product_string.h". */


/* This ensures that the standard header file "fenv.h" includes
 * the Arm-specific file "DLib_Product_fenv.h". */


/* Max buffer used for swap in qsort */




/* Enable system locking  */
#line 45 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Product.h"

/* Enable AEABI support */


/* Enable rtmodel for setjump buffer size */


/* Enable parsing of hex floats */






/* Special placement for locale structures when building ropi libraries */




/* CPP-library uses software floatingpoint interface */


/* Use speedy implementation of floats (simple quad). */


/* Configure generic ELF init routines. */
#line 99 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Product.h"







#line 51 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Defaults.h"



/*
 * The remainder of the file sets up defaults for a number of
 * configuration symbols, each corresponds to a feature in the
 * libary.
 *
 * The value of the symbols should either be 1, if the feature should
 * be supported, or 0 if it shouldn't. (Except where otherwise
 * noted.)
 */


/*
 * Small or Large target
 *
 * This define determines whether the target is large or small. It must be 
 * setup in the DLib_Product header or in the compiler itself.
 *
 * For a small target some functionality in the library will not deliver 
 * the best available results. For instance the _accurate variants will not use
 * the extra precision packet for large arguments.
 * 
 */







/*
 * File handling
 *
 * Determines whether FILE descriptors and related functions exists or not.
 * When this feature is selected, i.e. set to 1, then FILE descriptors and
 * related functions (e.g. fprintf, fopen) exist. All files, even stdin,
 * stdout, and stderr will then be handled with a file system mechanism that
 * buffers files before accessing the lowlevel I/O interface (__open, __read,
 * __write, etc).
 *
 * If not selected, i.e. set to 0, then FILE descriptors and related functions
 * (e.g. fprintf, fopen) does not exist. All functions that normally uses
 * stderr will use stdout instead. Functions that uses stdout and stdin (like
 * printf and scanf) will access the lowlevel I/O interface directly (__open,
 * __read, __write, etc), i.e. there will not be any buffering.
 *
 * The default is not to have support for FILE descriptors.
 */





/*
 * Use static buffers for stdout
 *
 * This setting controls whether the stream stdout uses a static 80 bytes
 * buffer or uses a one byte buffer allocated in the file descriptor. This
 * setting is only applicable if the FILE descriptors are enabled above.
 *
 * Default is to use a static 80 byte buffer.
 */





/*
 * Support of locale interface
 *
 * "Locale" is the system in C that support language- and
 * contry-specific settings for a number of areas, including currency
 * symbols, date and time, and multibyte encodings.
 *
 * This setting determines whether the locale interface exist or not.
 * When this feature is selected, i.e. set to 1, the locale interface exist
 * (setlocale, etc). A number of preselected locales can be activated during
 * runtime. The preselected locales and encodings is choosen by defining any
 * number of _LOCALE_USE_xxx and _ENCODING_USE_xxx symbols. The application
 * will start with the "C" locale choosen. (Single byte encoding is always
 * supported in this mode.)
 *
 *
 * If not selected, i.e. set to 0, the locale interface (setlocale, etc) does
 * not exist. One preselected locale and one preselected encoding is then used
 * directly. That locale can not be changed during runtime. The preselected
 * locale and encoding is choosen by defining at most one of _LOCALE_USE_xxx
 * and at most one of _ENCODING_USE_xxx. The default is to use the "C" locale
 * and the single byte encoding, respectively.
 *
 * The default is not to have support for the locale interface with the "C"
 * locale and the single byte encoding.
 *
 * Supported locales
 * -----------------
 * _LOCALE_USE_C                  C standard locale (the default)
 * _LOCALE_USE_POSIX ISO-8859-1   Posix locale
 * _LOCALE_USE_CS_CZ ISO-8859-2   Czech language locale for Czech Republic
 * _LOCALE_USE_DA_DK ISO-8859-1   Danish language locale for Denmark
 * _LOCALE_USE_DA_EU ISO-8859-15  Danish language locale for Europe
 * _LOCALE_USE_DE_AT ISO-8859-1   German language locale for Austria
 * _LOCALE_USE_DE_BE ISO-8859-1   German language locale for Belgium
 * _LOCALE_USE_DE_CH ISO-8859-1   German language locale for Switzerland
 * _LOCALE_USE_DE_DE ISO-8859-1   German language locale for Germany
 * _LOCALE_USE_DE_EU ISO-8859-15  German language locale for Europe
 * _LOCALE_USE_DE_LU ISO-8859-1   German language locale for Luxemburg
 * _LOCALE_USE_EL_EU ISO-8859-7x  Greek language locale for Europe
 *                                (Euro symbol added)
 * _LOCALE_USE_EL_GR ISO-8859-7   Greek language locale for Greece
 * _LOCALE_USE_EN_AU ISO-8859-1   English language locale for Australia
 * _LOCALE_USE_EN_CA ISO-8859-1   English language locale for Canada
 * _LOCALE_USE_EN_DK ISO_8859-1   English language locale for Denmark
 * _LOCALE_USE_EN_EU ISO-8859-15  English language locale for Europe
 * _LOCALE_USE_EN_GB ISO-8859-1   English language locale for United Kingdom
 * _LOCALE_USE_EN_IE ISO-8859-1   English language locale for Ireland
 * _LOCALE_USE_EN_NZ ISO-8859-1   English language locale for New Zealand
 * _LOCALE_USE_EN_US ISO-8859-1   English language locale for USA
 * _LOCALE_USE_ES_AR ISO-8859-1   Spanish language locale for Argentina
 * _LOCALE_USE_ES_BO ISO-8859-1   Spanish language locale for Bolivia
 * _LOCALE_USE_ES_CL ISO-8859-1   Spanish language locale for Chile
 * _LOCALE_USE_ES_CO ISO-8859-1   Spanish language locale for Colombia
 * _LOCALE_USE_ES_DO ISO-8859-1   Spanish language locale for Dominican Republic
 * _LOCALE_USE_ES_EC ISO-8859-1   Spanish language locale for Equador
 * _LOCALE_USE_ES_ES ISO-8859-1   Spanish language locale for Spain
 * _LOCALE_USE_ES_EU ISO-8859-15  Spanish language locale for Europe
 * _LOCALE_USE_ES_GT ISO-8859-1   Spanish language locale for Guatemala
 * _LOCALE_USE_ES_HN ISO-8859-1   Spanish language locale for Honduras
 * _LOCALE_USE_ES_MX ISO-8859-1   Spanish language locale for Mexico
 * _LOCALE_USE_ES_PA ISO-8859-1   Spanish language locale for Panama
 * _LOCALE_USE_ES_PE ISO-8859-1   Spanish language locale for Peru
 * _LOCALE_USE_ES_PY ISO-8859-1   Spanish language locale for Paraguay
 * _LOCALE_USE_ES_SV ISO-8859-1   Spanish language locale for Salvador
 * _LOCALE_USE_ES_US ISO-8859-1   Spanish language locale for USA
 * _LOCALE_USE_ES_UY ISO-8859-1   Spanish language locale for Uruguay
 * _LOCALE_USE_ES_VE ISO-8859-1   Spanish language locale for Venezuela
 * _LOCALE_USE_ET_EE ISO-8859-1   Estonian language for Estonia
 * _LOCALE_USE_EU_ES ISO-8859-1   Basque language locale for Spain
 * _LOCALE_USE_FI_EU ISO-8859-15  Finnish language locale for Europe
 * _LOCALE_USE_FI_FI ISO-8859-1   Finnish language locale for Finland
 * _LOCALE_USE_FO_FO ISO-8859-1   Faroese language locale for Faroe Islands
 * _LOCALE_USE_FR_BE ISO-8859-1   French language locale for Belgium
 * _LOCALE_USE_FR_CA ISO-8859-1   French language locale for Canada
 * _LOCALE_USE_FR_CH ISO-8859-1   French language locale for Switzerland
 * _LOCALE_USE_FR_EU ISO-8859-15  French language locale for Europe
 * _LOCALE_USE_FR_FR ISO-8859-1   French language locale for France
 * _LOCALE_USE_FR_LU ISO-8859-1   French language locale for Luxemburg
 * _LOCALE_USE_GA_EU ISO-8859-15  Irish language locale for Europe
 * _LOCALE_USE_GA_IE ISO-8859-1   Irish language locale for Ireland
 * _LOCALE_USE_GL_ES ISO-8859-1   Galician language locale for Spain
 * _LOCALE_USE_HR_HR ISO-8859-2   Croatian language locale for Croatia
 * _LOCALE_USE_HU_HU ISO-8859-2   Hungarian language locale for Hungary
 * _LOCALE_USE_ID_ID ISO-8859-1   Indonesian language locale for Indonesia
 * _LOCALE_USE_IS_EU ISO-8859-15  Icelandic language locale for Europe
 * _LOCALE_USE_IS_IS ISO-8859-1   Icelandic language locale for Iceland
 * _LOCALE_USE_IT_EU ISO-8859-15  Italian language locale for Europe
 * _LOCALE_USE_IT_IT ISO-8859-1   Italian language locale for Italy
 * _LOCALE_USE_IW_IL ISO-8859-8   Hebrew language locale for Israel
 * _LOCALE_USE_KL_GL ISO-8859-1   Greenlandic language locale for Greenland
 * _LOCALE_USE_LT_LT   BALTIC     Lithuanian languagelocale for Lithuania
 * _LOCALE_USE_LV_LV   BALTIC     Latvian languagelocale for Latvia
 * _LOCALE_USE_NL_BE ISO-8859-1   Dutch language locale for Belgium
 * _LOCALE_USE_NL_EU ISO-8859-15  Dutch language locale for Europe
 * _LOCALE_USE_NL_NL ISO-8859-9   Dutch language locale for Netherlands
 * _LOCALE_USE_NO_EU ISO-8859-15  Norwegian language locale for Europe
 * _LOCALE_USE_NO_NO ISO-8859-1   Norwegian language locale for Norway
 * _LOCALE_USE_PL_PL ISO-8859-2   Polish language locale for Poland
 * _LOCALE_USE_PT_BR ISO-8859-1   Portugese language locale for Brazil
 * _LOCALE_USE_PT_EU ISO-8859-15  Portugese language locale for Europe
 * _LOCALE_USE_PT_PT ISO-8859-1   Portugese language locale for Portugal
 * _LOCALE_USE_RO_RO ISO-8859-2   Romanian language locale for Romania
 * _LOCALE_USE_RU_RU ISO-8859-5   Russian language locale for Russia
 * _LOCALE_USE_SL_SI ISO-8859-2   Slovenian language locale for Slovenia
 * _LOCALE_USE_SV_EU ISO-8859-15  Swedish language locale for Europe
 * _LOCALE_USE_SV_FI ISO-8859-1   Swedish language locale for Finland
 * _LOCALE_USE_SV_SE ISO-8859-1   Swedish language locale for Sweden
 * _LOCALE_USE_TR_TR ISO-8859-9   Turkish language locale for Turkey
 *
 *  Supported encodings
 *  -------------------
 * n/a                            Single byte (used if no other is defined).
 * _ENCODING_USE_UTF8             UTF8 encoding.
 */






/* We need to have the "C" locale if we have full locale support. */






/*
 * Support of multibytes in printf- and scanf-like functions
 *
 * This is the default value for _DLIB_PRINTF_MULTIBYTE and
 * _DLIB_SCANF_MULTIBYTE. See them for a description.
 *
 * Default is to not have support for multibytes in printf- and scanf-like
 * functions.
 */






/*
 * Throw handling in the EC++ library
 *
 * This setting determines what happens when the EC++ part of the library
 * fails (where a normal C++ library 'throws').
 *
 * The following alternatives exists (setting of the symbol):
 * 0                - The application does nothing, i.e. continues with the
 *                    next statement.
 * 1                - The application terminates by calling the 'abort'
 *                    function directly.
 * <anything else>  - An object of class "exception" is created.  This
 *                    object contains a string describing the problem.
 *                    This string is later emitted on "stderr" before
 *                    the application terminates by calling the 'abort'
 *                    function directly.
 *
 * Default is to do nothing.
 */






/*
 * Hexadecimal floating-point numbers in strtod
 *
 * If selected, i.e. set to 1, strtod supports C99 hexadecimal floating-point
 * numbers. This also enables hexadecimal floating-points in internal functions
 * used for converting strings and wide strings to float, double, and long
 * double.
 *
 * If not selected, i.e. set to 0, C99 hexadecimal floating-point numbers
 * aren't supported.
 *
 * Default is not to support hexadecimal floating-point numbers.
 */






/*
 * Printf configuration symbols.
 *
 * All the configuration symbols described further on controls the behaviour
 * of printf, sprintf, and the other printf variants.
 *
 * The library proves four formatters for printf: 'tiny', 'small',
 * 'large', and 'default'.  The setup in this file controls all except
 * 'tiny'.  Note that both small' and 'large' explicitly removes
 * some features.
 */

/*
 * Handle multibytes in printf
 *
 * This setting controls whether multibytes and wchar_ts are supported in
 * printf. Set to 1 to support them, otherwise set to 0.
 *
 * See _DLIB_FORMATTED_MULTIBYTE for the default setting.
 */





/*
 * Long long formatting in printf
 *
 * This setting controls long long support (%lld) in printf. Set to 1 to
 * support it, otherwise set to 0.

 * Note, if long long should not be supported and 'intmax_t' is larger than
 * an ordinary 'long', then %jd and %jn will not be supported.
 *
 * Default is to support long long formatting.
 */

#line 351 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Defaults.h"






/*
 * Floating-point formatting in printf
 *
 * This setting controls whether printf supports floating-point formatting.
 * Set to 1 to support them, otherwise set to 0.
 *
 * Default is to support floating-point formatting.
 */





/*
 * Hexadecimal floating-point formatting in printf
 *
 * This setting controls whether the %a format, i.e. the output of
 * floating-point numbers in the C99 hexadecimal format. Set to 1 to support
 * it, otherwise set to 0.
 *
 * Default is to support %a in printf.
 */





/*
 * Output count formatting in printf
 *
 * This setting controls whether the output count specifier (%n) is supported
 * or not in printf. Set to 1 to support it, otherwise set to 0.
 *
 * Default is to support %n in printf.
 */





/*
 * Support of qualifiers in printf
 *
 * This setting controls whether qualifiers that enlarges the input value
 * [hlLjtz] is supported in printf or not. Set to 1 to support them, otherwise
 * set to 0. See also _DLIB_PRINTF_INT_TYPE_IS_INT and
 * _DLIB_PRINTF_INT_TYPE_IS_LONG.
 *
 * Default is to support [hlLjtz] qualifiers in printf.
 */





/*
 * Support of flags in printf
 *
 * This setting controls whether flags (-+ #0) is supported in printf or not.
 * Set to 1 to support them, otherwise set to 0.
 *
 * Default is to support flags in printf.
 */





/*
 * Support widths and precisions in printf
 *
 * This setting controls whether widths and precisions are supported in printf.
 * Set to 1 to support them, otherwise set to 0.
 *
 * Default is to support widths and precisions in printf.
 */





/*
 * Support of unsigned integer formatting in printf
 *
 * This setting controls whether unsigned integer formatting is supported in
 * printf. Set to 1 to support it, otherwise set to 0.
 *
 * Default is to support unsigned integer formatting in printf.
 */





/*
 * Support of signed integer formatting in printf
 *
 * This setting controls whether signed integer formatting is supported in
 * printf. Set to 1 to support it, otherwise set to 0.
 *
 * Default is to support signed integer formatting in printf.
 */





/*
 * Support of formatting anything larger than int in printf
 *
 * This setting controls if 'int' should be used internally in printf, rather
 * than the largest existing integer type. If 'int' is used, any integer or
 * pointer type formatting use 'int' as internal type even though the
 * formatted type is larger. Set to 1 to use 'int' as internal type, otherwise
 * set to 0.
 *
 * See also next configuration.
 *
 * Default is to internally use largest existing internally type.
 */





/*
 * Support of formatting anything larger than long in printf
 *
 * This setting controls if 'long' should be used internally in printf, rather
 * than the largest existing integer type. If 'long' is used, any integer or
 * pointer type formatting use 'long' as internal type even though the
 * formatted type is larger. Set to 1 to use 'long' as internal type,
 * otherwise set to 0.
 *
 * See also previous configuration.
 *
 * Default is to internally use largest existing internally type.
 */









/*
 * Emit a char a time in printf
 *
 * This setting controls internal output handling. If selected, i.e. set to 1,
 * then printf emits one character at a time, which requires less code but
 * can be slightly slower for some types of output.
 *
 * If not selected, i.e. set to 0, then printf buffers some outputs.
 *
 * Note that it is recommended to either use full file support (see
 * _DLIB_FILE_DESCRIPTOR) or -- for debug output -- use the linker
 * option "-e__write_buffered=__write" to enable buffered I/O rather
 * than deselecting this feature.
 */






/*
 * Scanf configuration symbols.
 *
 * All the configuration symbols described here controls the
 * behaviour of scanf, sscanf, and the other scanf variants.
 *
 * The library proves three formatters for scanf: 'small', 'large',
 * and 'default'.  The setup in this file controls all, however both
 * 'small' and 'large' explicitly removes some features.
 */

/*
 * Handle multibytes in scanf
 *
 * This setting controls whether multibytes and wchar_t:s are supported in
 * scanf. Set to 1 to support them, otherwise set to 0.
 *
 * See _DLIB_FORMATTED_MULTIBYTE for the default.
 */





/*
 * Long long formatting in scanf
 *
 * This setting controls whether scanf supports long long support (%lld). It
 * also controls, if 'intmax_t' is larger than an ordinary 'long', i.e. how
 * the %jd and %jn specifiers behaves. Set to 1 to support them, otherwise set
 * to 0.
 *
 * Default is to support long long formatting in scanf.
 */

#line 566 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Defaults.h"





/*
 * Support widths in scanf
 *
 * This controls whether scanf supports widths. Set to 1 to support them,
 * otherwise set to 0.
 *
 * Default is to support widths in scanf.
 */





/*
 * Support qualifiers [hjltzL] in scanf
 *
 * This setting controls whether scanf supports qualifiers [hjltzL] or not. Set
 * to 1 to support them, otherwise set to 0.
 *
 * Default is to support qualifiers in scanf.
 */





/*
 * Support floating-point formatting in scanf
 *
 * This setting controls whether scanf supports floating-point formatting. Set
 * to 1 to support them, otherwise set to 0.
 *
 * Default is to support floating-point formatting in scanf.
 */





/*
 * Support output count formatting (%n)
 *
 * This setting controls whether scanf supports output count formatting (%n).
 * Set to 1 to support it, otherwise set to 0.
 *
 * Default is to support output count formatting in scanf.
 */





/*
 * Support scansets ([]) in scanf
 *
 * This setting controls whether scanf supports scansets ([]) or not. Set to 1
 * to support them, otherwise set to 0.
 *
 * Default is to support scansets in scanf.
 */





/*
 * Support signed integer formatting in scanf
 *
 * This setting controls whether scanf supports signed integer formatting or
 * not. Set to 1 to support them, otherwise set to 0.
 *
 * Default is to support signed integer formatting in scanf.
 */





/*
 * Support unsigned integer formatting in scanf
 *
 * This setting controls whether scanf supports unsigned integer formatting or
 * not. Set to 1 to support them, otherwise set to 0.
 *
 * Default is to support unsigned integer formatting in scanf.
 */





/*
 * Support assignment suppressing [*] in scanf
 *
 * This setting controls whether scanf supports assignment suppressing [*] or
 * not. Set to 1 to support them, otherwise set to 0.
 *
 * Default is to support assignment suppressing in scanf.
 */





/*
 * Handle multibytes in asctime and strftime.
 *
 * This setting controls whether multibytes and wchar_ts are
 * supported.Set to 1 to support them, otherwise set to 0.
 *
 * See _DLIB_FORMATTED_MULTIBYTE for the default setting.
 */





/*
 * True if "qsort" should be implemented using bubble sort.
 *
 * Bubble sort is less efficient than quick sort but requires less RAM
 * and ROM resources.
 */





/*
 * Set Buffert size used in qsort
 */





/*
 * The default "rand" function uses an array of 32 long:s of memory to
 * store the current state.
 *
 * The simple "rand" function uses only a single long. However, the
 * quality of the generated psuedo-random numbers are not as good as
 * the default implementation.
 */





/*
 * Wide character and multi byte character support in library.
 */





/*
 * Set attributes on the function used by the C-SPY debug interface to set a
 * breakpoint in.
 */





/*
 * Support threading in the library
 *
 * 0    No thread support
 * 1    Thread support with a, b, and d.
 * 2    Thread support with a, b, and e.
 * 3    Thread support with all thread-local storage in a dynamically allocated
 *        memory area and a, and b.
 *      a. Lock on heap accesses
 *      b. Optional lock on file accesses (see _DLIB_FILE_OP_LOCKS below)
 *      d. Use an external thread-local storage interface for all the
 *         libraries static and global variables.
 *      e. Static and global variables aren't safe for access from several
 *         threads.
 *
 * Note that if locks are used the following symbols must be defined:
 *
 *   _DLIB_THREAD_LOCK_ONCE_TYPE
 *   _DLIB_THREAD_LOCK_ONCE_MACRO(control_variable, init_function)
 *   _DLIB_THREAD_LOCK_ONCE_TYPE_INIT
 *
 * They will be used to initialize the needed locks only once. TYPE is the
 * type for the static control variable, MACRO is the expression that will be
 * evaluated at each usage of a lock, and INIT is the initializer for the
 * control variable.
 *
 * Note that if thread model 3 is used the symbol _DLIB_TLS_POINTER must be
 * defined. It is a thread local pointer to a dynamic memory area that
 * contains all used TLS variables for the library. Optionally the following
 * symbols can be defined as well (default is to use the default const data
 * and data memories):
 *
 *   _DLIB_TLS_INITIALIZER_MEMORY The memory to place the initializers for the
 *                                TLS memory area
 *   _DLIB_TLS_MEMORY             The memory to use for the TLS memory area. A
 *                                pointer to this memory must be castable to a
 *                                default pointer and back.
 *   _DLIB_TLS_REQUIRE_INIT       Set to 1 to require __cstart_init_tls
 *                                when needed to initialize the TLS data
 *                                segment for the main thread.
 *   _DLIB_TLS_SEGMENT_DATA       The name of the TLS RAM data segment
 *   _DLIB_TLS_SEGMENT_INIT       The name of the used to initialize the
 *                                TLS data segment.
 *
 * See DLib_Threads.h for a description of what interfaces needs to be
 * defined for thread support.
 */





/*
 * Used by products where one runtime library can be used by applications
 * with different data models, in order to reduce the total number of
 * libraries required. Typically, this is used when the pointer types does
 * not change over the data models used, but the placement of data variables
 * or/and constant variables do.
 *
 * If defined, this symbol is typically defined to the memory attribute that
 * is used by the runtime library. The actual define must use a
 * _Pragma("type_attribute = xxx") construct. In the header files, it is used
 * on all statically linked data objects seen by the application.
 */




#line 812 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Defaults.h"


/*
 * Turn on support for the Target-specific ABI. The ABI is based on the
 * ARM AEABI. A target, except ARM, may deviate from it.
 */

#line 826 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Defaults.h"


  /* Possible AEABI deviations */
#line 836 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Defaults.h"

#line 844 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Defaults.h"
  /*
   * The "difunc" table contains information about C++ objects that
   * should be dynamically initialized, where each entry in the table
   * represents an initialization function that should be called. When
   * the symbol _DLIB_AEABI_DIFUNC_CONTAINS_OFFSETS is true, each
   * entry in the table is encoded as an offset from the entry
   * location. When false, the entries contain the actual addresses to
   * call.
   */






/*
 * Turn on usage of a pragma to tell the linker the number of elements used
 * in a setjmp jmp_buf.
 */





/*
 * If true, the product supplies a "DLib_Product_string.h" file that
 * is included from "string.h".
 */





/*
 * Determine whether the math fma routines are fast or not.
 */




/*
 * Rtti support.
 */

#line 899 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Defaults.h"

/*
 * Use the "pointers to short" or "pointers to long" implementation of 
 * the basic floating point routines (like Dnorm, Dtest, Dscale, and Dunscale).
 */




/*
 * Use 64-bit long long as intermediary type in Dtest, and fabs.
 * Default is to do this if long long is 64-bits.
 */




/*
 * Favor speed versus some size enlargements in floating point functions.
 */




/*
 * Include dlmalloc as an alternative heap manager in product.
 *
 * Typically, an application will use a "malloc" heap manager that is
 * relatively small but not that efficient. An application can
 * optionally use the "dlmalloc" package, which provides a more
 * effective "malloc" heap manager, if it is included in the product
 * and supported by the settings.
 *
 * See the product documentation on how to use it, and whether or not
 * it is included in the product.
 */

  /* size_t/ptrdiff_t must be a 4 bytes unsigned integer. */
#line 943 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Defaults.h"





/*
 * Allow the 64-bit time_t interface?
 *
 * Default is yes if long long is 64 bits.
 */

  #pragma language = save 
  #pragma language = extended





  #pragma language = restore






/*
 * Is time_t 64 or 32 bits?
 *
 * Default is 32 bits.
 */




/*
 * Do we include math functions that demands lots of constant bytes?
 * (like erf, erfc, expm1, fma, lgamma, tgamma, and *_accurate)
 *
 */




/*
 * Set this to __weak, if supported.
 *
 */
#line 997 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Defaults.h"


/*
 * Deleted options
 *
 */







#line 73 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"











                /* Floating-point */

/*
 * Whenever a floating-point type is equal to another, we try to fold those
 * two types into one. This means that if float == double then we fold float to
 * use double internally. Example sinf(float) will use _Sin(double, uint).
 *
 * _X_FNAME is a redirector for internal support routines. The X can be
 *          D (double), F (float), or L (long double). It redirects by using
 *          another prefix. Example calls to Dtest will be __iar_Dtest,
 *          __iar_FDtest, or __iarLDtest.
 * _X_FUN   is a redirector for functions visible to the customer. As above, the
 *          X can be D, F, or L. It redirects by using another suffix. Example
 *          calls to sin will be sin, sinf, or sinl.
 * _X_TYPE  The type that one type is folded to.
 * _X_PTRCAST is a redirector for a cast operation involving a pointer.
 * _X_CAST  is a redirector for a cast involving the float type.
 *
 * _FLOAT_IS_DOUBLE signals that all internal float routines aren't needed.
 * _LONG_DOUBLE_IS_DOUBLE signals that all internal long double routines
 *                        aren't needed.
 */
#line 147 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"





                /* NAMING PROPERTIES */


/* Has support for fixed point types */




/* Has support for secure functions (printf_s, scanf_s, etc) */
/* Will not compile if enabled */
#line 170 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"

/* Has support for complex C types */




/* If is Embedded C++ language */






/* If is true C++ language */






/* True C++ language setup */
#line 233 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"











                /* NAMESPACE CONTROL */
#line 292 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"









#line 308 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"








#line 1 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\xencoding_limits.h"
/* xencoding_limits.h internal header file */
/* Copyright 2003-2010 IAR Systems AB.  */





  #pragma system_include


#line 1 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\ycheck.h"
/* ycheck.h internal checking header file. */
/* Copyright 2005-2010 IAR Systems AB. */

/* Note that there is no include guard for this header. This is intentional. */


  #pragma system_include


/* __INTRINSIC
 *
 * Note: Redefined each time ycheck.h is included, i.e. for each
 * system header, to ensure that intrinsic support could be turned off
 * individually for each file.
 */










/* __AEABI_PORTABILITY_INTERNAL_LEVEL
 *
 * Note: Redefined each time ycheck.h is included, i.e. for each
 * system header, to ensure that ABI support could be turned off/on
 * individually for each file.
 *
 * Possible values for this preprocessor symbol:
 *
 * 0 - ABI portability mode is disabled.
 *
 * 1 - ABI portability mode (version 1) is enabled.
 *
 * All other values are reserved for future use.
 */






#line 67 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\ycheck.h"

#line 12 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\xencoding_limits.h"
#line 1 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"
/* yvals.h internal configuration header file. */
/* Copyright 2001-2010 IAR Systems AB. */

#line 711 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"

/*
 * Copyright (c) 1992-2009 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
V5.04:0576 */
#line 13 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\xencoding_limits.h"

                                /* Multibyte encoding length. */


#line 24 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\xencoding_limits.h"








#line 38 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\xencoding_limits.h"



#line 55 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\xencoding_limits.h"



#line 317 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"



                /* FLOATING-POINT PROPERTIES */

                /* float properties */
#line 335 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"

                /* double properties */
#line 360 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"

                /* long double properties */
                /* (must be same as double) */




#line 382 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"


                /* INTEGER PROPERTIES */

                                /* MB_LEN_MAX */







  #pragma language=save
  #pragma language=extended
  typedef long long _Longlong;
  typedef unsigned long long _ULonglong;
  #pragma language=restore
#line 405 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"






  typedef unsigned short int _Wchart;
  typedef unsigned short int _Wintt;


#line 424 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"

#line 432 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"

                /* POINTER PROPERTIES */


typedef signed int  _Ptrdifft;
typedef unsigned int     _Sizet;

/* IAR doesn't support restrict  */


                /* stdarg PROPERTIES */






/* This struct definition must not be inside namespace std, or
   overloading will be wrong in full C++ */
  typedef struct __va_list
  {
    char  *_Ap;
  } __va_list;

  typedef __va_list __Va_list;





__intrinsic __nounwind void __iar_Atexit(void (*)(void));



  typedef struct
  {       /* state of a multibyte translation */
    unsigned int _Wchar;
    unsigned int _State;
  } _Mbstatet;
#line 481 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"





  typedef struct __FILE _Filet;




typedef struct
{       /* file position */

  _Longlong _Off;    /* can be system dependent */



  _Mbstatet _Wstate;
} _Fpost;







                /* THREAD AND LOCALE CONTROL */

#line 1 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Threads.h"
/***************************************************
 *
 * DLib_Threads.h is the library threads manager.
 *
 * Copyright 2004-2010 IAR Systems AB.  
 *
 * This configuration header file sets up how the thread support in the library
 * should work.
 *
 ***************************************************
 *
 * DO NOT MODIFY THIS FILE!
 *
 ***************************************************/





  #pragma system_include


/*
 * DLib can support a multithreaded environment. The preprocessor symbol 
 * _DLIB_THREAD_SUPPORT governs the support. It can be 0 (no support), 
 * 1 (currently not supported), 2 (locks only), and 3 (simulated TLS and locks).
 */

/*
 * This header sets the following symbols that governs the rest of the
 * library:
 * ------------------------------------------
 * _DLIB_MULTI_THREAD     0 No thread support
 *                        1 Multithread support
 * _DLIB_GLOBAL_VARIABLES 0 Use external TLS interface for the libraries global
 *                          and static variables
 *                        1 Use a lock for accesses to the locale and no 
 *                          security for accesses to other global and static
 *                          variables in the library
 * _DLIB_FILE_OP_LOCKS    0 No file-atomic locks
 *                        1 File-atomic locks

 * _DLIB_COMPILER_TLS     0 No Thread-Local-Storage support in the compiler
 *                        1 Thread-Local-Storage support in the compiler
 * _DLIB_TLS_QUAL         The TLS qualifier, define only if _COMPILER_TLS == 1
 *
 * _DLIB_THREAD_MACRO_SETUP_DONE Whether to use the standard definitions of
 *                               TLS macros defined in xtls.h or the definitions
 *                               are provided here.
 *                        0 Use default macros
 *                        1 Macros defined for xtls.h
 *
 * _DLIB_THREAD_LOCK_ONCE_TYPE
 *                        type for control variable in once-initialization of 
 *                        locks
 * _DLIB_THREAD_LOCK_ONCE_MACRO(control_variable, init_function)
 *                        expression that will be evaluated at each lock access
 *                        to determine if an initialization must be done
 * _DLIB_THREAD_LOCK_ONCE_TYPE_INIT
 *                        initial value for the control variable
 *
 ****************************************************************************
 * Description
 * -----------
 *
 * If locks are to be used (_DLIB_MULTI_THREAD != 0), the following options
 * has to be used in ilink: 
 *   --redirect __iar_Locksyslock=__iar_Locksyslock_mtx
 *   --redirect __iar_Unlocksyslock=__iar_Unlocksyslock_mtx
 *   --redirect __iar_Lockfilelock=__iar_Lockfilelock_mtx
 *   --redirect __iar_Unlockfilelock=__iar_Unlockfilelock_mtx
 *   --keep     __iar_Locksyslock_mtx
 * and, if C++ is used, also:
 *   --redirect __iar_Initdynamicfilelock=__iar_Initdynamicfilelock_mtx
 *   --redirect __iar_Dstdynamicfilelock=__iar_Dstdynamicfilelock_mtx
 *   --redirect __iar_Lockdynamicfilelock=__iar_Lockdynamicfilelock_mtx
 *   --redirect __iar_Unlockdynamicfilelock=__iar_Unlockdynamicfilelock_mtx
 * Xlink uses similar options (-e and -g). The following lock interface must
 * also be implemented: 
 *   typedef void *__iar_Rmtx;                   // Lock info object
 *
 *   void __iar_system_Mtxinit(__iar_Rmtx *);    // Initialize a system lock
 *   void __iar_system_Mtxdst(__iar_Rmtx *);     // Destroy a system lock
 *   void __iar_system_Mtxlock(__iar_Rmtx *);    // Lock a system lock
 *   void __iar_system_Mtxunlock(__iar_Rmtx *);  // Unlock a system lock
 * The interface handles locks for the heap, the locale, the file system
 * structure, the initialization of statics in functions, etc. 
 *
 * The following lock interface is optional to be implemented:
 *   void __iar_file_Mtxinit(__iar_Rmtx *);    // Initialize a file lock
 *   void __iar_file_Mtxdst(__iar_Rmtx *);     // Destroy a file lock
 *   void __iar_file_Mtxlock(__iar_Rmtx *);    // Lock a file lock
 *   void __iar_file_Mtxunlock(__iar_Rmtx *);  // Unlock a file lock
 * The interface handles locks for each file stream.
 * 
 * These three once-initialization symbols must also be defined, if the 
 * default initialization later on in this file doesn't work (done in 
 * DLib_product.h):
 *
 *   _DLIB_THREAD_LOCK_ONCE_TYPE
 *   _DLIB_THREAD_LOCK_ONCE_MACRO(control_variable, init_function)
 *   _DLIB_THREAD_LOCK_ONCE_TYPE_INIT
 *
 * If an external TLS interface is used, the following must
 * be defined:
 *   typedef int __iar_Tlskey_t;
 *   typedef void (*__iar_Tlsdtor_t)(void *);
 *   int __iar_Tlsalloc(__iar_Tlskey_t *, __iar_Tlsdtor_t); 
 *                                                    // Allocate a TLS element
 *   int __iar_Tlsfree(__iar_Tlskey_t);               // Free a TLS element
 *   int __iar_Tlsset(__iar_Tlskey_t, void *);        // Set a TLS element
 *   void *__iar_Tlsget(__iar_Tlskey_t);              // Get a TLS element
 *
 */

/* We don't have a compiler that supports tls declarations */



#line 157 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Threads.h"

  /* Thread support, library supports threaded variables in a user specified
     memory area, locks on heap and on FILE */

  /* See Documentation/ThreadsInternal.html for a description. */





  


#line 176 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Threads.h"





#line 187 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Threads.h"





  #pragma language=save 
  #pragma language=extended
  __intrinsic __nounwind void __iar_dlib_perthread_initialize(void  *);
  __intrinsic __nounwind void  *__iar_dlib_perthread_allocate(void);
  __intrinsic __nounwind void __iar_dlib_perthread_destroy(void);
  __intrinsic __nounwind void __iar_dlib_perthread_deallocate(void  *);









  #pragma segment = "__DLIB_PERTHREAD" 
  #pragma segment = "__DLIB_PERTHREAD_init" 


























#line 242 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Threads.h"

  /* The thread-local variable access function */
  void  *__iar_dlib_perthread_access(void  *);
  #pragma language=restore



























    /* Make sure that each destructor is inserted into _Deallocate_TLS */
  









  /* Internal function declarations. */


    __intrinsic __nounwind void __iar_Locale_lconv_init(void);



  





  
  typedef void *__iar_Rmtx;
  

  
  __intrinsic __nounwind void __iar_system_Mtxinit(__iar_Rmtx *m);
  __intrinsic __nounwind void __iar_system_Mtxdst(__iar_Rmtx *m);
  __intrinsic __nounwind void __iar_system_Mtxlock(__iar_Rmtx *m);
  __intrinsic __nounwind void __iar_system_Mtxunlock(__iar_Rmtx *m);

  __intrinsic __nounwind void __iar_file_Mtxinit(__iar_Rmtx *m);
  __intrinsic __nounwind void __iar_file_Mtxdst(__iar_Rmtx *m);
  __intrinsic __nounwind void __iar_file_Mtxlock(__iar_Rmtx *m);
  __intrinsic __nounwind void __iar_file_Mtxunlock(__iar_Rmtx *m);

  /* Function to destroy the locks. Should be called after atexit and 
     _Close_all. */
  __intrinsic __nounwind void __iar_clearlocks(void);


#line 323 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Threads.h"

  





  

#line 341 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\DLib_Threads.h"

  typedef unsigned _Once_t;



  













#line 510 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"

#line 520 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"

                /* THREAD-LOCAL STORAGE */
#line 528 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"


                /* MULTITHREAD PROPERTIES */

  
  
  /* The lock interface for DLib to use. */ 
  _Pragma("object_attribute = __weak") __intrinsic __nounwind void __iar_Locksyslock_Locale(void);
  _Pragma("object_attribute = __weak") __intrinsic __nounwind void __iar_Locksyslock_Malloc(void);
  _Pragma("object_attribute = __weak") __intrinsic __nounwind void __iar_Locksyslock_Stream(void);
  _Pragma("object_attribute = __weak") __intrinsic __nounwind void __iar_Locksyslock_Debug(void);
  _Pragma("object_attribute = __weak") __intrinsic __nounwind void __iar_Locksyslock_StaticGuard(void);
  _Pragma("object_attribute = __weak") __intrinsic __nounwind void __iar_Locksyslock(unsigned int);
  _Pragma("object_attribute = __weak") __intrinsic __nounwind void __iar_Unlocksyslock_Locale(void);
  _Pragma("object_attribute = __weak") __intrinsic __nounwind void __iar_Unlocksyslock_Malloc(void);
  _Pragma("object_attribute = __weak") __intrinsic __nounwind void __iar_Unlocksyslock_Stream(void);
  _Pragma("object_attribute = __weak") __intrinsic __nounwind void __iar_Unlocksyslock_Debug(void);
  _Pragma("object_attribute = __weak") __intrinsic __nounwind void __iar_Unlocksyslock_StaticGuard(void);
  _Pragma("object_attribute = __weak") __intrinsic __nounwind void __iar_Unlocksyslock(unsigned int);

  _Pragma("object_attribute = __weak") __intrinsic __nounwind void __iar_Initdynamicfilelock(__iar_Rmtx *);
  _Pragma("object_attribute = __weak") __intrinsic __nounwind void __iar_Dstdynamicfilelock(__iar_Rmtx *);
  _Pragma("object_attribute = __weak") __intrinsic __nounwind void __iar_Lockdynamicfilelock(__iar_Rmtx *);
  _Pragma("object_attribute = __weak") __intrinsic __nounwind void __iar_Unlockdynamicfilelock(__iar_Rmtx *);
  
  
#line 568 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"

                /* LOCK MACROS */
#line 576 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"

#line 694 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"

                /* MISCELLANEOUS MACROS AND FUNCTIONS*/





#line 709 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\yvals.h"



/*
 * Copyright (c) 1992-2009 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
V5.04:0576 */
#line 12 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\stdint.h"


/* Fixed size types. These are all optional. */

  typedef signed char   int8_t;
  typedef unsigned char uint8_t;



  typedef signed short int   int16_t;
  typedef unsigned short int uint16_t;



  typedef signed int   int32_t;
  typedef unsigned int uint32_t;



  #pragma language=save
  #pragma language=extended
  typedef signed long long int   int64_t;
  typedef unsigned long long int uint64_t;
  #pragma language=restore


/* Types capable of holding at least a certain number of bits.
   These are not optional for the sizes 8, 16, 32, 64. */
typedef signed char   int_least8_t;
typedef unsigned char uint_least8_t;

typedef signed short int   int_least16_t;
typedef unsigned short int uint_least16_t;

typedef signed int   int_least32_t;
typedef unsigned int uint_least32_t;

/* This isn't really optional, but make it so for now. */

  #pragma language=save
  #pragma language=extended
  typedef signed long long int int_least64_t;
  #pragma language=restore


  #pragma language=save
  #pragma language=extended
  typedef unsigned long long int uint_least64_t;
  #pragma language=restore


/* The fastest type holding at least a certain number of bits.
   These are not optional for the size 8, 16, 32, 64.
   For now, the 64 bit size is optional in IAR compilers. */
typedef signed int   int_fast8_t;
typedef unsigned int uint_fast8_t;

typedef signed int   int_fast16_t;
typedef unsigned int uint_fast16_t;

typedef signed int   int_fast32_t;
typedef unsigned int uint_fast32_t;


  #pragma language=save
  #pragma language=extended
  typedef signed long long int int_fast64_t;
  #pragma language=restore


  #pragma language=save
  #pragma language=extended
  typedef unsigned long long int uint_fast64_t;
  #pragma language=restore


/* The integer type capable of holding the largest number of bits. */
#pragma language=save
#pragma language=extended
typedef signed long long int   intmax_t;
typedef unsigned long long int uintmax_t;
#pragma language=restore

/* An integer type large enough to be able to hold a pointer.
   This is optional, but always supported in IAR compilers. */
typedef signed long int   intptr_t;
typedef unsigned long int uintptr_t;

/* An integer capable of holding a pointer to a specific memory type. */



typedef int __data_intptr_t; typedef unsigned int __data_uintptr_t;


/* Minimum and maximum limits. */






























































































/* Macros expanding to integer constants. */

































#line 258 "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\inc\\c\\stdint.h"

/*
 * Copyright (c) 1992-2009 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
V5.04:0576 */
#line 47 "C:\\Users\\PCCUBE\\Desktop\\Opus_17_jul_2018\\Opus_rtl8711af\\project\\realtek_ameba1_va0_example\\EWARM-RELEASE\\..\\..\\..\\external\\opus\\include\\opus_types.h"




   typedef int8_t opus_int8;
   typedef uint8_t opus_uint8;
   typedef int16_t opus_int16;
   typedef uint16_t opus_uint16;
   typedef int32_t opus_int32;
   typedef uint32_t opus_uint32;
   typedef int64_t opus_int64;
   typedef uint64_t opus_uint64;
#line 165 "C:\\Users\\PCCUBE\\Desktop\\Opus_17_jul_2018\\Opus_rtl8711af\\project\\realtek_ameba1_va0_example\\EWARM-RELEASE\\..\\..\\..\\external\\opus\\include\\opus_types.h"

#line 31 "C:\\Users\\PCCUBE\\Desktop\\Opus_17_jul_2018\\Opus_rtl8711af\\external\\opus\\src\\mlp.h"





typedef struct {
  const opus_int8 *bias;
  const opus_int8 *input_weights;
  int nb_inputs;
  int nb_neurons;
  int sigmoid;
} DenseLayer;

typedef struct {
  const opus_int8 *bias;
  const opus_int8 *input_weights;
  const opus_int8 *recurrent_weights;
  int nb_inputs;
  int nb_neurons;
} GRULayer;

extern const DenseLayer layer0;
extern const GRULayer layer1;
extern const DenseLayer layer2;

void compute_dense(const DenseLayer *layer, float *output, const float *input);

void compute_gru(const GRULayer *gru, float *state, const float *input);

#line 8 "C:\\Users\\PCCUBE\\Desktop\\Opus_17_jul_2018\\Opus_rtl8711af\\external\\opus\\src\\mlp_data.c"

static const opus_int8 layer0_weights[800] = {
   21, -8, -5, 3, -16, 13, 3, -24,
   -18, 14, 9, 2, 5, -2, 2, -3,
   -5, 35, 10, 10, -8, 2, 1, 3,
   -26, -61, 9, 4, -8, 18, 3, -5,
   47, -34, -6, 35, 35, 30, 40, -40,
   11, -39, 11, -14, 14, -24, -8, -8,
   2, -23, -100, 1, 19, -14, 4, 7,
   13, -26, 47, -4, 44, 5, 27, -1,
   57, -1, -36, 34, -20, -60, 25, -73,
   24, -70, 20, -4, -6, 68, -16, 13,
   -24, 40, -42, -18, 0, 10, 12, -56,
   -6, 38, 21, 5, -116, 19, 11, -14,
   3, 26, 14, 23, 1, 35, -16, -2,
   -4, 55, 23, 16, 22, 45, -71, -27,
   -20, 8, -47, -47, -46, -14, -50, -82,
   36, 45, 54, -32, -6, 14, -2, -24,
   3, 23, -27, -8, 1, 70, 15, -4,
   -7, 21, 17, -126, 5, -47, -53, -6,
   34, 25, -1, 10, 17, -37, 38, -1,
   30, 25, -35, 112, -21, 8, -10, -3,
   15, 18, -14, -8, -20, 11, 24, 37,
   -35, 50, 52, 16, 9, 15, -26, 43,
   -3, -9, -26, 126, 7, 33, 55, -88,
   9, 28, 5, -19, -76, 32, 3, 11,
   10, -54, 2, -13, 3, 94, 52, 106,
   26, 74, 44, -99, 58, -44, 50, 15,
   29, 25, 50, -84, 28, 1, -30, 11,
   8, 20, -67, 4, 11, -25, -39, -33,
   -83, -15, -9, 18, -2, -24, 18, 77,
   -39, -80, 25, -8, 52, -88, -21, 81,
   29, -23, -31, 69, -28, 0, 12, 47,
   15, 20, 34, -53, 5, 111, -39, -7,
   1, 56, 6, 3, 7, -67, -6, -31,
   107, -6, 12, -97, 36, -18, -34, -6,
   -9, -63, 10, -9, 3, 12, -80, -87,
   17, -9, 39, 126, 13, 15, 19, -6,
   29, 11, 10, -30, 26, -54, 31, -47,
   25, -40, -24, 23, 16, -27, -32, 30,
   -22, -59, -9, 65, -86, -21, 120, -25,
   -52, -12, 34, -50, 25, -17, 30, -4,
   95, 4, 9, 61, 25, -6, 11, -33,
   -8, -3, 26, 37, -28, 19, -17, 36,
   11, -8, 8, -89, 2, -68, -95, 18,
   22, 36, 9, -8, -48, 54, -26, -6,
   30, -28, 10, -18, 2, -11, 7, 2,
   17, -5, 27, -21, 9, 15, 10, -18,
   -10, 0, -9, 19, 10, -48, -35, -32,
   15, 24, 25, -6, 3, 51, -15, 9,
   19, -17, 6, 8, -9, 13, 14, -31,
   -24, 10, -23, 21, 16, 18, -8, 35,
   18, -18, -18, -26, 25, 10, 55, 9,
   3, -24, -15, 2, -28, 20, -45, -14,
   15, -19, -8, 10, 6, 40, -31, -45,
   40, 53, 40, 27, -15, -31, -30, 10,
   38, 50, 28, 71, -21, 20, 1, 23,
   22, 14, 5, -48, 39, 78, -7, -6,
   9, 50, 88, -15, 55, 36, 32, -22,
   -60, 13, 31, -36, -71, -2, 52, 37,
   7, 46, -23, -43, 19, -49, -34, 15,
   60, -66, 36, 2, -57, -32, 64, -53,
   -36, 49, -10, 21, -2, 23, -21, 22,
   -3, -15, -6, 18, -12, -32, -11, -11,
   -32, 24, 36, 37, -7, 30, -22, -12,
   22, -63, 26, 20, -16, -30, -13, -18,
   -10, 45, 10, -24, -2, -26, 28, 18,
   36, 44, -40, -5, -14, -4, 18, -18,
   -1, 18, -40, 15, 29, 15, 12, 3,
   25, -51, 8, -17, 9, -19, 22, -33,
   -22, 39, 61, -15, 55, -24, 10, 32,
   12, 9, 29, 5, -33, -33, 5, 0,
   35, 105, -14, 39, 4, 43, 36, 52,
   50, -39, 45, -51, 27, 7, 65, -34,
   108, 127, 42, 26, 73, 19, 9, 17,
   -62, 16, 11, 52, 85, -46, 10, -95,
   64, 53, 90, -8, -54, -5, -77, -45,
   127, -4, 54, -3, -19, 66, 40, -127,
   53, 22, -26, 24, 20, -36, -2, 101,
   1, 35, -1, -8, 5, -36, -16, 33,
   6, -73, -21, -23, -32, -21, -4, -46,
   -42, -66, -16, -8, 0, -20, -21, 37,
   -128, -128, -127, 126, -128, -127, 127, -3,
   127, 122, 127, 126, -127, -128, 127, -127,
   127, -124, 126, -126, -127, -128, 125, -127,
   -38, -123, 125, -128, -128, 126, 125, 127,
   -127, -123, -127, 127, -73, -113, 127, -17,
   127, 126, 127, 126, -126, -126, 127, -127,
   127, -125, 121, -126, -25, -127, 127, -126,
   26, -126, 71, -28, -128, 20, 20, 71,
   -87, -93, 39, 116, 111, -85, 70, -26,
   62, 23, -15, 18, 4, 32, 114, -55,
   8, -116, 85, -67, -110, -49, 11, -5,
   -128, -41, 61, 70, -29, 115, 127, 51,
   127, 127, 127, -128, -127, 127, -128, -127,
   -126, -128, -126, -127, 127, 126, -128, 127,
   -126, 125, -55, 127, 127, 127, -125, 115,
   -128, -126, -128, -127, 127, -128, -128, 127,
   28, -127, -120, -127, 127, -127, -127, 9,
   -26, -118, 73, 39, 124, 78, -126, 123,
   10, -127, -105, -64, 118, -84, -127, 61,
   77, 104, -128, -127, 94, -17, -28, 36
};

static const opus_int8 layer0_bias[32] = {
   -39, 28, -7, -12, -36, -35, -49, 48,
   38, -17, 44, 15, -45, -18, -45, 9,
   11, 4, -25, 38, 12, -31, -90, -70,
   -17, 27, 7, -73, 42, -103, 78, 99
};

static const opus_int8 layer1_weights[2304] = {
   29, -37, -21, -34, 19, -32, 44, -43,
   51, -5, -14, 37, -32, 74, 127, -29,
   -75, -49, -5, -106, -64, 24, -11, 26,
   23, 25, -6, -1, -48, -16, -26, 29,
   24, -3, 50, -23, -45, -59, -11, -10,
   -9, 51, 42, 16, -27, -79, 72, 7,
   55, -15, 5, -15, -24, -1, 48, -29,
   -44, 26, -20, -40, 57, -15, 21, 45,
   -4, -25, 13, 24, -26, 12, -2, 20,
   48, -60, 45, 37, 74, 27, 13, 0,
   126, 5, 68, 110, 7, 74, 51, 65,
   -21, 32, 27, -30, 11, -3, -43, 73,
   31, 43, 119, -51, 13, -80, 32, -23,
   37, 69, 101, -33, -35, 50, -47, 126,
   -84, 64, 88, 28, 57, 56, -28, -102,
   0, -15, -57, 1, -34, 25, 59, 36,
   -11, 26, -42, 14, -4, -24, -37, 63,
   -18, 2, -32, -9, -37, -15, -9, 9,
   -41, -36, 105, 20, 14, -14, 64, 92,
   68, -83, -7, 20, 86, 22, 38, 8,
   -63, -6, -13, -56, 61, 55, 50, -33,
   -9, 22, -22, 77, 44, -33, 44, -20,
   77, 33, 34, -78, -53, 31, -108, 33,
   -23, -54, 63, 34, -9, 43, -17, 15,
   -15, 15, -3, -50, 15, -26, -6, -35,
   -52, 57, 0, -10, 67, -57, -47, 36,
   -64, 19, -19, -29, -97, -15, -49, 69,
   -18, 84, 122, 4, -81, 18, -85, -4,
   -40, 99, -46, 11, -10, -29, -51, -59,
   112, -103, 29, -45, 5, 43, 94, 24,
   -4, -37, 27, -54, -24, 30, 43, 40,
   -10, 13, 18, 75, 51, 11, -14, -7,
   34, 80, -119, 73, -47, -68, 50, 79,
   42, -2, -53, 22, -9, -21, -4, 88,
   97, -5, -28, 16, -64, -1, -25, 9,
   -20, -63, 10, 57, -3, 127, -2, -26,
   8, 66, -48, -118, 47, -73, 15, 51,
   -29, 28, 72, 41, -2, 48, 75, -24,
   -47, 44, 8, -39, 70, -73, -44, 56,
   -14, -62, 30, 74, 31, -98, 13, 8,
   83, -36, -7, -8, 62, 13, -29, -20,
   21, -66, 53, -49, -24, -14, 19, 101,
   -47, -51, 65, -52, 25, -32, -38, 39,
   -56, 41, 49, 22, 10, 21, 1, 38,
   -18, 48, 36, 55, -39, -10, -4, 3,
   17, -27, -81, 61, 1, 8, -32, 35,
   29, 85, -33, -56, 16, 3, -48, 35,
   56, -40, 14, -65, 3, -70, -29, 84,
   51, 75, -52, 56, -55, 0, -13, -58,
   6, 3, 22, 31, -34, 20, -6, 26,
   -121, 85, -75, 11, -34, -23, 46, -11,
   0, 9, 20, 39, 59, -12, 38, 14,
   6, -33, -15, -86, 39, -48, -5, 4,
   29, -28, 52, -8, -51, 52, 60, -11,
   -22, 81, 81, 17, -127, -28, 27, -40,
   -36, -57, 43, 52, 51, -38, -10, 23,
   -44, -72, -63, 3, 20, -68, -72, -38,
   26, -45, 19, -75, -18, 4, 14, 15,
   -47, 104, -9, 51, 25, 16, -95, 64,
   -11, -2, -5, 39, 52, -40, 77, 44,
   11, -29, -37, 5, -58, -38, -28, 36,
   50, 2, -26, -3, -16, -11, -11, 16,
   -14, -47, -3, -3, -48, 45, 40, -14,
   3, -67, -4, 19, -25, 14, -34, 48,
   -66, 67, 70, 20, 52, -21, 21, 28,
   16, 70, -114, -11, 29, 9, -52, -52,
   -39, 44, 17, 11, -15, -111, 84, -20,
   -23, -60, 15, -39, 48, 10, -31, -24,
   -38, 4, -42, -25, -70, -3, -75, -40,
   -3, -19, 33, -14, 18, -14, -5, -16,
   46, -56, 38, -1, 2, 9, 17, -41,
   -44, 11, -23, 28, -32, 8, -1, 57,
   -5, 44, -64, -21, -54, 47, 22, -19,
   -12, -24, -48, -4, -42, -46, -17, 52,
   -39, -33, 79, -26, 20, 21, 9, -5,
   -127, -31, 26, -86, -20, -115, 27, 33,
   33, 72, 30, 57, -17, 2, 71, 58,
   -52, -10, 20, -79, -3, 40, -106, 17,
   34, 68, -17, 31, -27, 23, 17, 18,
   21, 25, 15, 41, -51, 30, -3, 1,
   -4, -60, -13, -59, 53, -42, -34, -29,
   -22, -50, 27, -70, -58, -21, -59, -27,
   -28, 45, -66, 12, 85, -61, 0, -39,
   -73, -75, -29, -42, -47, -88, -46, 27,
   -43, 112, 83, -51, -36, -64, 13, 74,
   -9, 2, 25, 38, -18, -64, -81, -23,
   -12, 40, 18, -38, -121, -36, -6, -73,
   -16, -59, 28, -26, -2, -69, -6, -7,
   43, -21, 61, 0, 1, 0, 13, 18,
   -18, -21, -3, 18, 42, 0, 67, -35,
   39, 15, -97, -87, 103, 65, 86, 20,
   -11, -17, 9, -9, 15, 15, -35, 52,
   34, -105, -85, 10, -36, -68, -64, 60,
   -85, 51, -54, -39, -19, 77, 0, 35,
   -20, 35, -78, 41, -11, 49, 14, 17,
   -31, 1, 41, -1, 10, -25, -90, -12,
   -9, -12, -26, 6, 34, 22, 31, 25,
   6, 27, -26, 5, -35, 29, 18, -12,
   54, -42, -22, -14, -6, 36, -14, -16,
   35, 69, 75, 7, -113, 44, -2, -18,
   3, -15, 50, -28, -36, -9, -25, 47,
   127, -6, -35, 35, -46, 17, 116, -62,
   -17, -98, -105, 77, -99, -17, 41, 16,
   -7, 17, -89, 37, -16, -72, -3, -29,
   50, 30, -43, -7, -72, 125, 51, 59,
   -73, 37, 61, 2, -19, -11, 4, 46,
   33, 51, 74, 88, -51, 68, 124, 27,
   97, -51, 16, -3, -6, -12, -30, 28,
   33, 3, -59, 22, 72, 53, 24, -29,
   -4, -65, 89, -59, 92, 121, 12, 11,
   111, -20, 12, -85, -123, -33, -65, 70,
   68, 127, 2, -25, -104, 57, -74, -94,
   -128, -27, 28, -7, -126, -123, -2, -57,
   -57, 76, 55, -43, -44, -92, 1, 29,
   12, 10, 15, 10, 88, 0, -65, -57,
   -66, 14, -10, -10, 36, 19, -49, -4,
   33, 3, 99, -49, -28, 41, 21, 37,
   46, 62, 16, 43, -58, 119, -32, 34,
   27, 13, -46, -1, -4, 23, 31, -21,
   108, 4, 107, 37, 26, -48, 70, 18,
   30, -18, -101, 77, -91, -117, -74, 16,
   -116, 43, -24, 26, -19, -49, 34, -54,
   101, -14, 15, 12, 80, -9, 110, 42,
   8, -30, 53, -42, 34, -8, 60, -89,
   7, 41, 21, -94, 51, -1, -22, -37,
   22, 12, 49, -1, 55, 30, 5, -26,
   -12, 4, -29, -16, -118, -12, -48, 85,
   -44, -5, -27, -13, -84, -39, -63, -83,
   44, 5, -62, -52, -110, -8, -24, -36,
   -22, -52, 20, -10, 42, 117, -19, -30,
   21, -16, -38, 92, 35, -5, -7, 45,
   -69, -57, -69, 20, 18, 14, 107, -36,
   -37, 43, 25, -38, -44, -104, 46, 8,
   93, -9, 54, 39, -48, -28, 21, 2,
   24, 11, -5, -14, -2, -10, 28, 105,
   5, -60, -65, -38, 121, 5, -33, -60,
   44, 68, 21, -69, -9, 7, 55, -26,
   -75, 19, -76, 0, 10, -101, -56, -64,
   19, -68, 14, 19, 9, -49, 23, -1,
   19, -52, -15, -67, -63, -18, 24, -40,
   -44, -11, -6, 43, 62, 67, -27, 5,
   -57, 6, 25, -14, 19, 53, 24, -29,
   -64, -26, -50, -19, 28, -15, -29, -56,
   6, -40, 35, 54, -6, -45, -17, 41,
   106, -42, -47, 43, -22, 20, -2, -126,
   -29, 72, 85, -32, -30, 43, -6, 14,
   31, -84, 4, 7, 16, -47, -37, -33,
   -14, -60, -52, -55, -44, 41, 39, -114,
   -52, 24, -100, 55, -6, 40, 102, 48,
   -1, 55, -55, -35, -27, 51, -1, 6,
   -10, -16, -38, 29, 37, 55, 18, 22,
   28, -58, 13, 60, -60, 18, 6, -8,
   31, -52, 14, 2, 16, 30, -22, -39,
   0, 35, -29, 7, -48, 41, 78, 24,
   30, 1, -89, 72, 27, -33, -33, -12,
   61, -82, 123, 36, -12, -25, 55, 37,
   66, 27, -19, 37, 10, 44, -14, -17,
   -20, 30, 20, 2, 21, 15, 37, 35,
   3, -40, 6, 12, 4, 22, -21, -79,
   29, 3, -55, -77, -31, 13, -19, -24,
   10, -38, 9, -78, 24, -50, -15, 31,
   30, -4, -33, 25, 27, 10, -24, 43,
   -7, 78, -2, 27, 69, -23, 10, 79,
   -19, -69, -3, 6, 25, 71, -42, -4,
   -10, -21, -43, 18, 63, 6, 15, -41,
   -7, 77, 37, -47, -7, 41, -34, 40,
   6, 25, 25, -74, -32, 4, 43, -26,
   -8, 44, -5, 39, -4, -12, -9, -90,
   -51, 38, 32, 42, 28, -42, 13, 4,
   30, 18, 54, -13, -11, 3, -2, 58,
   30, -53, 5, -76, 4, -14, -13, 16,
   10, -108, 6, -114, 28, -93, -65, -40,
   21, 28, -31, -85, -52, 29, 9, -10,
   -12, -26, -27, -82, 43, 0, -75, -6,
   29, -4, 64, -12, -5, 25, 14, -2,
   -54, -127, 81, -35, 14, -59, -75, 69,
   -29, -65, 43, -88, -21, 34, -87, -48,
   51, 2, 8, -37, 25, 10, -25, -7,
   -37, -39, -8, 28, 55, -72, -26, 16,
   -30, 41, -49, 32, 37, -7, -12, 23,
   38, -61, -13, 28, 16, 4, -16, -122,
   37, 8, 17, 3, -79, 23, -17, 28,
   -28, -31, -14, -39, 114, -49, -15, -47,
   -14, 7, -7, -79, 98, -72, 19, -26,
   65, -44, -60, -56, 18, -20, -35, 19,
   -72, 8, 78, -84, 40, -3, 46, 40,
   3, -31, 16, 38, -58, 48, 34, 0,
   -75, -25, -12, -25, -5, -15, 18, -11,
   6, 34, 20, 21, -6, -19, -34, 22,
   -18, -48, 69, 122, -16, 1, 12, 11,
   80, 31, 28, -34, 23, 27, -19, 10,
   63, 81, 66, 91, 10, 2, 123, 126,
   126, 74, 21, 75, 9, -15, 36, 29,
   34, -54, 101, -57, -51, -61, 47, 66,
   41, 38, -124, 56, -36, 48, 51, -7,
   -11, -6, 30, -55, 48, 3, -18, -20,
   24, 24, 0, -55, 62, 3, -74, -49,
   2, -13, -31, -3, -12, 42, -33, 5,
   -24, -39, 117, -81, -31, -39, 0, 2,
   6, 25, 77, 13, 6, 10, 26, -21,
   -127, 35, 7, -26, -69, -19, -21, -25,
   111, -34, -3, 29, 6, -31, -44, 73,
   -1, 6, -4, 2, 99, 25, 92, 34,
   40, 5, -94, 21, 47, 126, 61, -5,
   2, -37, 4, 21, -27, 32, -18, -10,
   70, -40, -15, 38, 19, 30, 12, -19,
   -11, -2, -50, 22, -33, 3, 33, -39,
   -19, 87, -67, -27, -11, -117, 36, 104,
   11, -56, -29, -6, 5, 14, -5, 44,
   38, 9, 24, 16, 127, 47, -6, -9,
   63, -58, -106, -19, 62, -30, 29, -23,
   69, 4, -31, 3, 14, -101, 5, 3,
   31, -6, -88, 28, 13, 0, 42, 0,
   6, 60, 54, -11, 5, -34, -33, -24,
   -5, 42, 19, -63, 10, 32, -9, -32,
   25, 26, -28, -5, -7, -45, 32, 11,
   -12, 31, -26, -33, -46, -76, 40, -5,
   3, -5, 3, -18, -12, 93, 17, 62,
   -121, -14, 42, 76, 24, 4, 34, 14,
   41, 18, -10, 93, 91, -62, 58, -55,
   88, -64, -9, 23, 25, 45, -2, 70,
   43, 9, 103, 22, 48, 46, -13, 9,
   -27, -37, 35, -51, -54, -10, 57, -35,
   -2, -1, 7, -3, -37, 5, 9, 3,
   27, -7, 50, 5, -50, 22, 21, -13,
   22, 43, 10, -18, 37, -20, -38, -32,
   -2, 27, 1, -67, -41, 60, -28, -33,
   -50, -38, 76, -18, 23, -16, -25, 0,
   -8, -71, -10, -12, 20, -34, 40, -19,
   12, -42, 14, 11, -28, 37, -33, 4,
   41, 19, 65, 85, -26, 23, -50, 38,
   3, -34, 64, 43, 1, 16, 34, 35,
   -15, -27, 20, -1, 50, 0, -30, -50,
   14, -60, -69, 10, -57, -45, -32, -14,
   32, -16, 46, -61, -46, 1, -40, -75,
   -28, -16, -73, -50, -13, -14, 9, -78,
   5, -44, -9, -25, -79, -16, -46, 92,
   -70, 61, -20, 12, -43, 3, -19, 40,
   11, 25, 32, -58, 58, 45, 28, 1,
   13, -27, -53, 30, -30, -31, -52, 10,
   17, 68, -6, -44, -8, 25, 33, 48,
   81, -43, -10, 67, 29, 23, 11, 20,
   -39, -28, 31, 18, -72, 29, 22, -11,
   -71, 39, -10, -121, -20, -8, -40, 125,
   -7, -43, 10, 49, 12, 38, 43, -79,
   -72, -41, -48, -60, -41, 5, -17, 35,
   95, 35, 124, -11, 2, 70, -60, -25,
   0, -27, 76, -19, -94, 40, -96, 65,
   -9, -31, -8, -35, 27, -44, 64, -60,
   -12, -72, 12, -56, 8, -45, -5, -27,
   -6, 50, 30, -20, -18, 64, -108, -15,
   -43, 44, 11, -14, -8, -21, -24, 42,
   51, 47, -3, 17, -17, -24, 33, -28,
   25, -15, -33, -21, 6, -13, 39, 19,
   7, 116, 37, 53, 105, 4, 15, -56,
   10, 12, -92, -30, 117, 4, 32, -13,
   -17, -21, 43, 29, -25, -38, 51, 32,
   74, -41, -15, 29, -5, -114, 35, -36,
   46, 51, 15, 16, -39, 24, 17, 3,
   -26, 40, -37, 34, 43, 20, -61, -14,
   31, -29, 34, 25, -22, 25, -39, 39,
   -33, -10, -56, -61, -6, -48, -114, -96,
   -12, 3, 82, 45, 8, -2, -4, -28,
   -42, -58, -50, -34, -54, -26, -64, -16,
   -82, 49, -28, 0, -30, -20, -64, -68,
   -18, 18, -44, -34, -42, -61, -17, 14,
   -28, 8, 27, -49, -18, 45, -41, 11,
   -2, 10, -8, -17, -24, -28, -42, 12,
   79, 46, 30, -26, 5, 3, 3, 58,
   12, -73, 23, 17, 5, 2, 20, 36,
   56, -33, 80, 71, 17, 87, 40, -21,
   26, 6, 48, -71, 76, 15, -47, 32,
   87, 30, 58, -11, 65, -43, 91, 54,
   -31, 8, 34, 25, -14, 37, -30, 20,
   -35, 4, -75, 56, -29, 22, 64, 48,
   47, -78, -74, 22, 11, -62, -28, 62,
   -30, 12, -25, -31, 41, -42, 22, 23,
   -8, -20, 38, 21, -6, 52, 23, 5,
   -20, 32, 3, 16, 26, 50, 3, -4,
   48, -77, -3, -4, 21, 23, 30, 11,
   -1, 9, -56, -100, 39, 5, -25, 35,
   95, 44, 22, 75, 19, -20, 126, -31,
   -8, -24, 37, 35, -32, -4, 20, 47,
   7, -84, 2, 10, 7, 7, 75, -64,
   46, 36, -77, -1, -38, -19, -52, 39,
   26, 41, 82, 38, 67, 62, -6, -25,
   -16, -35, -5, -14, 32, 15, -3, -38,
   28, 43, -59, 7, 58, 26, -63, -56
};

static const opus_int8 layer1_recur_weights[1728] = {
   -41, 5, 25, 16, -9, 22, 19, 19,
   -16, 56, -32, 68, 95, 62, 124, 81,
   30, 112, -24, 30, -12, 104, 49, 24,
   -10, 33, 31, 38, 10, 71, -16, 29,
   13, 14, 38, -7, 79, -25, -35, 6,
   9, -90, -16, -109, -49, 35, -15, -127,
   85, 12, -6, 16, 27, 26, 82, 10,
   -79, -36, 42, -88, 50, -26, -7, -87,
   127, 19, -96, -75, -3, 6, 8, -4,
   84, -30, -26, 70, -9, -123, -13, -2,
   64, -125, -49, -99, 126, 67, 94, -20,
   54, 110, -15, -48, -91, -1, 64, 4,
   31, -1, 52, -55, 16, 52, 21, 127,
   -124, 10, 31, 127, 41, -53, 68, 40,
   16, 48, -19, -69, -16, -100, -29, -97,
   -2, 47, -16, 40, 80, 60, 82, -18,
   -42, 15, -43, 42, 123, -28, 38, 18,
   35, -8, 38, -119, 103, 33, 9, -25,
   120, -110, -50, -30, 2, -67, -42, -33,
   -85, 38, 59, -55, 71, 97, -29, -64,
   14, 32, 1, -128, -26, -121, -33, -8,
   2, -65, 22, 85, -55, -57, 17, 37,
   2, -78, 28, -54, 17, -31, 31, 26,
   -8, 25, 23, -52, -15, -58, -18, 4,
   -23, -27, 4, 5, -85, 34, 29, -1,
   -80, -8, 1, 22, -32, 22, -27, 95,
   -55, -70, -127, -46, -58, -7, 38, -4,
   127, -14, -7, 71, 62, 43, -57, -54,
   60, -58, -28, -43, -50, 127, 101, 15,
   25, 49, -53, 17, -81, -60, 83, -32,
   46, 57, -59, 19, 49, -12, -109, 20,
   -19, -50, -7, 14, 79, 59, -30, -57,
   -5, -60, 13, 5, 85, -33, -89, 9,
   127, 13, -38, 127, 57, 99, 14, -26,
   -105, 3, -38, -77, 41, -19, 28, -31,
   23, -88, -22, -60, -29, 14, -84, 9,
   8, -1, -21, 49, 58, 15, -4, -6,
   100, -9, -26, -54, 94, 84, 25, 25,
   27, 49, -1, 0, -104, -5, 33, -10,
   40, 54, 15, 62, -1, -39, -54, 18,
   41, 15, -17, -84, -29, 31, -10, -65,
   -47, 1, -66, -17, -43, 34, 5, -61,
   94, 107, 37, 55, 46, 57, 63, -66,
   -14, 13, -82, 7, 10, -11, 72, 123,
   102, 1, -112, -71, 121, 56, -24, -24,
   127, 5, -24, -49, 104, -27, 56, -15,
   2, 76, 107, 24, 83, 86, 90, 45,
   116, 124, 48, 29, 102, 36, 10, 55,
   29, -29, 12, -84, -18, -50, -8, 17,
   -28, -52, -64, -3, 118, 54, 51, 45,
   -59, 47, -1, -35, 22, -10, 12, -79,
   -24, 4, 60, 92, -67, 125, -90, 29,
   -48, 64, -104, 23, -12, -51, -53, -37,
   -66, 21, 113, 75, 37, 9, -20, 0,
   5, -75, 32, 60, 12, 35, -68, -16,
   48, -22, 40, -19, 40, 77, -51, 63,
   23, 85, 8, 9, -41, -59, 98, 9,
   -24, -48, 47, 4, 48, 48, 4, 91,
   -69, 21, 21, 70, 22, 15, 57, 111,
   -64, -18, -8, 49, 43, -26, 7, -82,
   111, -21, 1, -52, 59, -82, 106, 5,
   -5, -45, 35, -15, -2, 57, 62, 57,
   68, -6, -27, -51, 50, 60, -21, -12,
   -127, 34, 89, -117, -59, -83, -76, 80,
   -59, -29, 56, -18, 27, -70, -67, 46,
   -92, -87, 12, -116, 71, -72, 4, -51,
   -64, 70, 6, -104, -67, 42, 3, -5,
   98, 41, -20, -1, 64, -32, -58, 51,
   -69, -126, 46, -21, -75, -27, -52, 52,
   -12, -17, 28, -1, -7, -21, -3, 88,
   68, 7, 3, 67, -7, 59, 33, 25,
   -4, -45, -38, 46, 72, -24, -92, -25,
   -108, 43, -35, -90, 3, -6, 22, -80,
   91, -35, 111, 8, -54, 21, -125, 31,
   -77, -121, -17, -56, -18, -125, -126, 36,
   -24, 35, 1, 0, 25, -20, 14, 12,
   3, 90, -87, 17, -54, -60, -58, -9,
   22, -35, 32, 12, 5, 17, -92, 3,
   8, -54, -128, -22, -75, -41, -22, 127,
   73, -9, -6, 12, -71, 106, -54, 120,
   -17, -51, 94, 13, -24, -67, -7, 35,
   -69, 27, -48, -77, 56, -60, -48, 64,
   38, 88, -20, 20, -123, 42, -91, 55,
   -98, -41, 78, -107, 120, -82, -91, 17,
   21, 31, 7, 31, 67, 32, -42, -9,
   126, 49, -41, -103, -66, -8, -32, -64,
   18, -56, 25, -14, 35, 35, -29, -18,
   -49, 2, 75, -46, -86, 47, -71, -14,
   18, 28, 15, 40, 33, -18, -45, 60,
   -52, 3, 43, 61, -115, -52, -1, 21,
   -28, 27, 17, -33, -125, 29, -9, 126,
   91, 37, -37, 106, -39, 61, -122, 5,
   -125, -123, 23, 35, -22, 12, 81, 20,
   -36, 76, 34, 63, 53, -64, 46, 24,
   41, 122, -22, 61, -14, -21, 10, 94,
   27, -27, 78, 3, 2, 15, 14, 20,
   -3, -15, -11, -128, -35, -58, 8, -43,
   83, -26, 48, 44, 8, -14, -10, 56,
   -48, 12, -39, -40, -17, 66, 69, 33,
   -34, -16, -32, 48, -86, 2, 21, 2,
   51, 31, -39, 57, -20, 16, -24, 66,
   65, -6, 64, -13, 2, 73, -85, -7,
   -127, -53, 49, -68, -44, 26, 79, -6,
   78, 17, -34, 45, 33, 16, 17, 56,
   -76, 28, 44, 12, 15, 35, 21, 66,
   -47, 53, 27, -13, 13, -30, 55, -31,
   67, -63, -4, 51, -40, 49, 51, 14,
   -38, -62, -49, 50, 26, 3, -16, -39,
   42, 7, 30, -27, 108, -73, -29, -6,
   29, 42, 19, -77, -40, -17, 57, -19,
   90, 70, -72, -40, -30, 65, 84, -4,
   2, 9, 33, -73, 73, 81, 8, -21,
   -22, -57, -5, -58, -32, 14, 34, 10,
   38, 7, 41, 0, -25, 38, 3, -125,
   62, -25, -20, 13, 20, 14, -9, -27,
   13, 31, -128, -85, 72, -63, -49, -18,
   81, 47, 37, 63, -10, -10, -66, 4,
   -116, 53, 14, 49, 6, 37, 38, -4,
   -47, 64, 15, 0, -110, -19, 45, 7,
   -37, 20, 21, 22, 51, 17, -39, 71,
   -59, -1, -35, -8, -73, -106, -30, 5,
   -68, -18, -36, 35, -21, -17, -1, 4,
   -24, -28, 5, 4, 11, -50, 27, 84,
   -16, -60, -86, -12, -31, -8, 43, 52,
   94, 14, 29, 46, -34, 6, -2, 51,
   -36, -56, -9, -48, -8, 26, 78, 3,
   -31, -46, 25, 14, -8, -9, -47, 1,
   -23, 65, 42, -5, 104, 96, -70, 18,
   -69, 84, -2, -28, -19, -35, 5, -49,
   -88, -117, 9, 82, -71, -58, 33, 82,
   17, 40, -93, 32, 5, 21, 38, -23,
   -77, -40, 48, -8, -10, 22, -27, -47,
   -49, 46, 67, -17, 81, -61, 92, 54,
   8, -71, 127, 23, -61, 51, 13, 32,
   -35, -52, -32, -4, -47, 20, 0, -62,
   -126, 3, -17, -127, 18, -70, 11, -29,
   -87, -27, -19, -13, -9, -128, -26, 69,
   -67, -29, 66, 49, 1, -119, -73, -7,
   -55, -9, 48, -45, -27, 26, 57, 12,
   9, 51, -98, -14, -21, -37, 88, 23,
   -37, 65, -11, 69, -7, -34, 16, 33,
   36, 94, 56, 5, 63, -38, 25, -55,
   -81, -74, 21, 30, -4, -16, 52, 37,
   4, 8, -48, 8, 127, -75, -56, -79,
   -76, 61, 17, -27, -63, -56, -53, 39,
   -109, -50, -77, -7, -100, -88, 23, -108,
   -120, 120, -87, -122, -87, 36, 63, -65,
   3, -32, 84, 55, 71, 126, 10, 37,
   29, 16, 45, 40, 75, -5, 40, -105,
   -7, -15, -25, 12, -78, 46, -9, -114,
   90, 50, -41, -23, 6, -58, 75, 19,
   62, -33, -38, -24, 66, 22, 66, -4,
   124, 29, -55, -29, 42, -17, -123, -79,
   -8, -3, -2, 19, 59, -33, -39, 41,
   51, 0, 45, -15, 67, 8, -42, 2,
   -20, -49, 95, -32, 5, -56, 37, 21,
   -11, -18, -8, 53, 17, 43, 14, 81,
   -90, -40, 69, -33, 59, 28, -8, 44,
   47, -11, -26, -92, 31, 86, 12, -39,
   9, -28, -22, -6, -42, -4, -23, 6,
   -57, 109, -46, -12, 10, -77, -66, -24,
   -26, 119, 78, 43, -17, -14, -45, 73,
   -4, 13, -44, -78, 26, -64, -60, -99,
   -104, 31, -16, -93, -64, 48, -17, 108,
   -71, 12, 34, -63, 24, 14, -28, -48,
   1, 94, -29, -27, 2, -5, -53, 18,
   56, 91, -19, -28, 45, -38, -55, -106,
   -10, 41, 49, -38, -4, 1, -84, -37,
   -77, 4, -66, 19, 56, 41, -82, 114,
   97, -50, 83, -38, 31, -126, -22, -94,
   -86, 44, 37, 35, 11, 60, 49, 3,
   26, 18, 124, -64, 50, -72, 17, -80,
   16, 30, 113, 34, -19, 32, 63, -30,
   95, -88, 55, 126, 127, 107, 49, 83,
   -17, -75, 1, -107, 27, 20, 115, 31,
   57, -11, -36, 41, 91, 31, 58, -38,
   -12, 4, 39, 38, 37, 13, -73, 33,
   11, 43, 35, 23, -86, 36, -10, 19,
   34, -10, -35, -8, 47, -105, -60, 75,
   -25, 127, 14, 106, 81, -9, -46, 21,
   35, 42, -6, 3, 118, 78, 37, 33,
   22, 98, 46, 50, -23, 81, 122, 18,
   30, 64, 105, 101, -116, -33, -66, 18,
   -59, -99, -125, -79, 19, 127, 120, -98,
   13, 27, 32, 26, 3, 20, 120, 10,
   29, 91, 51, 78, 28, -61, 34, -12,
   54, -19, 51, -17, 29, 56, 53, -124,
   -10, -97, 9, -10, -9, 2, 9, 33,
   33, 44, -47, 36, 52, -54, 63, 88,
   -11, 70, 68, 113, 11, 127, 65, 88,
   126, -12, 28, 81, 57, 123, 71, 26,
   5, 117, 16, 16, -9, 92, 50, -35,
   27, 27, -47, 39, 46, 13, 19, 61,
   106, 74, -31, 52, 94, 22, -40, -72,
   57, 10, 45, 25, 5, -5, 36, -7,
   -43, 40, 40, -81, -36, -47, 8, -18,
   63, 31, -48, 58, -49, -19, 25, -5,
   63, -76, 9, -2, 1, 127, 19, -24,
   32, 36, 23, 25, -49, 104, 13, 3,
   75, 12, -31, 38, 122, 20, 49, 35,
   -14, 16, 44, 101, -12, 119, 50, -48,
   -7, -11, 15, -103, -9, -39, 4, -54,
   -67, 32, 30, 47, 40, 60, 9, -17,
   -31, 47, 13, 127, -21, -4, 50, 28,
   34, -4, -72, -24, -2, -41, 3, 26,
   -34, -90, 82, 1, -83, 47, 40, -8,
   -4, 4, -65, -10, 115, 43, 104, 42,
   32, 85, -78, 12, 59, 71, 113, 42,
   -20, 50, -29, 61, 6, 104, 74, 65,
   -73, 12, 93, 77, 21, 24, -14, 84,
   58, 105, 37, 37, 85, -53, 76, -95,
   26, -17, -51, -64, -75, -19, -1, 27,
   25, -49, 46, 73, 19, -13, -98, -8,
   1, -37, -69, -81, 28, 2, 7, -40,
   -47, 55, 29, 53, 33, 103, -53, -15,
   19, -9, 7, 120, -21, 28, 27, 13
};

static const opus_int8 layer1_bias[72] = {
   47, 0, -35, 34, 104, 95, 120, -3,
   -5, 105, -41, 79, -27, 122, 46, 89,
   89, 34, 71, 94, 70, 68, 79, 18,
   44, 25, -15, -22, 18, -22, 9, -14,
   -45, 5, 1, 20, 38, 22, 15, 24,
   28, -14, -2, 10, 8, -27, -18, -46,
   -5, 34, -43, -33, 12, 13, 0, 0,
   9, -47, 28, 14, -18, 17, 8, 10,
   -38, -23, -20, -11, 59, 45, 76, 24
};

static const opus_int8 layer2_weights[48] = {
   122, -51, 118, -67, -23, -128, 126, -124,
   127, 12, 2, -68, 117, -80, 3, 127,
   71, 127, -128, -83, -15, 93, 13, 40,
   27, -127, 65, 101, 84, 16, 85, 117,
   127, -120, -59, -55, -128, -51, -128, -65,
   127, 1, 99, 127, -60, 127, -128, 50
};

static const opus_int8 layer2_bias[2] = {
   34, 115
};

const DenseLayer layer0 = {
   layer0_bias,
   layer0_weights,
   25, 32, 0
};

const GRULayer layer1 = {
   layer1_bias,
   layer1_weights,
   layer1_recur_weights,
   32, 24
};

const DenseLayer layer2 = {
   layer2_bias,
   layer2_weights,
   24, 2, 1
};

